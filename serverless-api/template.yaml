# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html
AWSTemplateFormatVersion: 2010-09-09
Description: This is a serverless-api definition. The lambdas and trigger events are
  explicitly defined, and the API Gateway is implicitly defined by AWS upon deployment. 

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

# These are imported into each definition in the template
Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 100
    MemorySize: 128
    Architectures:
      - x86_64
    VpcConfig:
      SecurityGroupIds:
        - !ImportValue rds-ClientSG
      SubnetIds: 
        - !ImportValue default-vpc-PrivateSubnet1
        - !ImportValue default-vpc-PrivateSubnet2 
    Environment:
      Variables:
        MY_GLOBAL_ENV_VAR: test-environment-variable

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: databaseConnTest
  databaseConnectionTestLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: database-conn-test
      Handler: src/handlers/databaseConnTest.databaseConnectionTestHandler
      Description: A simple example includes a HTTP get method to test connection against an RDS Postgres table.
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          SAMPLE_TABLE: MARLIN_TABLE
      Events:
        Api:
          Type: Api
          Properties:
            Path: /connection
            Method: GET
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: get-by-id.js
  helloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: hello-world
      Handler: src/handlers/helloWorld.helloWorldHandler
      Description: A simple example includes a HTTP get method to return a greeting based on a path param.
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{name}
            Method: GET

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
